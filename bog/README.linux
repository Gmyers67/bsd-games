1997-07-11

I grabbed this game from comp.sources.games/volume4.  The original
Makefile is in Makefile.bsd.

If you wish to use a different dictionary, you can set DICTSRC in the
Makefile.

Define PURE in the DEFS if you desire "pure/original" BSD behavior.
Not defining this will allow certain Linux "improvements" to be
compiled in.  In this case not defining PURE will provide a more
intuitive way of quiting or playing a new game after time has run out.

NOTE: You may wish to define PURE if you plan on using the post game
word lookup feature.  Press <ESC>, type a word, and bog will display
where it is located.  If PURE is not defined, it might be easy to
accidently start typing the word with out pressing <ESC> first.  This
would start a new game, and you would never be able to know where that
word was located. :(

Thanks to Andrew Kuchling.  (See ../Credits for his email address.)

Curt Olson
curt@sledge.mn.org

The licence conditions for bog require that changes be clearly
indicated in any changed copy.  The following changes were made from
the original bog:

Makefile was renamed to Makefile.bsd; bog.man was renamed to bog.6.in.

New files README.linux and Makefile were added.

Changes shown by the patch below were made.

Joseph S. Myers
jsm28@cam.ac.uk

======================================================================
--- ../../other/bog/bog.man	Wed May 21 22:17:24 1997
+++ bog.6.in	Thu May  1 19:27:26 1997
@@ -82,7 +82,10 @@
 .SH FILES
 .I Bog
 accesses a dictionary file, a dictionary index file, and a helpfile.
-Locations are system dependent.
+Locations are system dependent.  In this configuration, the files are
+located in the
+.I @bog_dir@
+directory.
 The dictionary file must have been created by
 .I mkdict
 and the index file by
--- ../../other/bog/bog.c	Wed May 21 22:17:25 1997
+++ bog.c	Thu Sep 23 21:01:50 1993
@@ -5,7 +5,11 @@
 #include <ctype.h>
 #include <stdio.h>
 
-char *version[] = "bog V1.0 brachman@ubc.csnet 23-Feb-88";
+#ifdef linux
+  char version[] = "bog V1.0 brachman@ubc.csnet 23-Feb-88";
+#else
+  char *version[] = "bog V1.0 brachman@ubc.csnet 23-Feb-88";
+#endif
 
 struct dictindex dictindex[26];
 
@@ -187,12 +191,26 @@
 			newgame(bspec);
 			bspec = (char *) NULL;		/* reset for subsequent games */
 			playgame();
+#if defined(linux) && !defined (PURE)
+			prompt("Type <q>uit, <esc> locate, any other key to continue...");
+#else
 			prompt("Type <space> to continue, any cap to quit...");
+#endif
 			flushin(stdin);
 			while (1) {
 				int ch;
 
 				ch = inputch();
+#if defined(linux) && !defined (PURE)
+				if (ch == '\033') {
+					findword();
+				} else if (ch == 'q') {
+					done = 1;
+					break;
+				} else {
+					break;
+				}
+#else
 				if (ch == '\033')
 					findword();
 				else {
@@ -203,6 +221,7 @@
 					if (ch == ' ')
 						break;
 				}
+#endif
 			}
 		}
 		cleanup();
--- ../../other/bog/bog.h	Wed May 21 22:17:25 1997
+++ bog.h	Sat Sep 25 14:29:14 1993
@@ -4,9 +4,9 @@
  * Configuration
  */
 
-#define BSD42			1	/* BSD 4.[23] */
+/* #define BSD42			1	/* BSD 4.[23] */
 /* #define ATARI			1	/* Atari ST */
-/* #define SYSV				1	/* System V */
+#define SYSV				1	/* System V */
 
 /*
  * If you don't have random() and srandom() #define what you have
@@ -20,9 +20,13 @@
 #define TIMER			1	/* Use tty polling (see timer.c) */
 #define LOADDICT		1	/* Load the dictionary for speed */
 
-#define DICT			"/usr/cna/billr/games/bog/dict"
-#define DICTINDEX		"/usr/cna/billr/games/bog/dict.ind"
-#define HELPFILE		"/usr/cna/billr/games/bog/helpfile"
+#ifdef linux
+  /* For linux, these are defined in the Makefile */
+#else
+  #define DICT			"/usr/games/lib/bog/dict"
+  #define DICTINDEX		"/usr/games/lib/bog/dict.ind"
+  #define HELPFILE		"/usr/games/lib/bog/helpfile"
+#endif
 
 /*
  * The theoretical maximum for MAXWORDLEN is ('a' - 1) == 96
--- ../../other/bog/help.c	Wed May 21 22:17:25 1997
+++ help.c	Thu Sep 23 19:00:55 1993
@@ -48,7 +48,11 @@
 
 	fclose(fp);
 	if (eof) {
+#ifdef linux
+		extern char version[];
+#else
 		extern char *version;
+#endif
 
 		wprintw(win, "%s", version);
 		wmove(win, nlines - 1, 0);
--- ../../other/bog/mach.c	Wed May 21 22:17:25 1997
+++ mach.c	Wed May 21 21:31:52 1997
@@ -204,7 +204,7 @@
 	return(getch() & 0177);
 }
 
-#ifdef XXX
+#ifdef linux
 /*
  * Flush all pending input
  */
@@ -214,7 +214,7 @@
 
 	flushinp();
 }
-#endif XXX
+#else /* !linux */
 
 #ifdef TIOCFLUSH
 #include <sys/file.h>
@@ -224,10 +224,13 @@
 {
 	int arg;
 
+#ifndef linux
 	arg = FREAD;
+#endif
 	(void) ioctl(fileno(fp), TIOCFLUSH, &arg);
 }
 #endif TIOCFLUSH
+#endif /* !linux */
 
 #ifdef ATARI
 #include <osbind.h>
@@ -331,6 +334,9 @@
 int n;
 {
 	int col, row;
+#ifdef linux
+	extern char *pword[];
+#endif
 
 	row = LIST_LINE + n % (lastline - LIST_LINE + 1);
 	col = colstarts[n / (lastline - LIST_LINE + 1)];
--- ../../other/bog/mkindex.c	Wed May 21 22:17:25 1997
+++ mkindex.c	Tue Sep 21 08:00:25 1993
@@ -24,6 +24,7 @@
 		off += clen + 1;
 	}
 	printf("%c %6ld %6ld\n", prev, start, off - 1);
+	exit(0);
 }
 
 /*
--- ../../other/bog/word.c	Wed May 21 22:17:26 1997
+++ word.c	Sun Oct 24 23:55:33 1993
@@ -174,6 +174,7 @@
     while (fgets(buf, sizeof(buf), fp) != (char *) NULL) {
         j = *buf - 'a';
         if (i != j) {
+            (void) fprintf(stderr, "%d != %d\n", i, j);
             (void) fprintf(stderr, "Bad index order\n");
             return(-1);
         }
